{"version":3,"sources":["components/HelperContext.js","components/Filteration.js","components/Users.js","components/Posts.js","components/Comments.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","HelperContext","props","useState","userData","setData","value","useMemo","Provider","children","Filteration","filter","setFilter","className","onChange","e","target","Users","useContext","setUserData","columns","React","Header","accessor","Cell","row","class","useEffect","a","fetch","response","json","usersData","console","log","data","tableInstance","useTable","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","page","rows","nextPage","canNextPage","canPreviousPage","previousPage","pageOptions","setPageSize","prepareRow","state","setGlobalFilter","globalFilter","pageIndex","pageSize","length","Number","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","Fragment","getCellProps","to","original","id","onClick","disabled","Posts","useHistory","history","postData","setPostData","useParams","filterdData","post","user_id","renderedUser","user","forEach","userObj","displayUserData","goBack","name","email","status","created_at","updated_at","Comments","commentData","setCommentData","filterdComments","comment","post_id","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"kTACMA,EAAcC,0BACdC,EAAgB,SAACC,GAAW,IAAD,EAEDC,mBAAS,IAFR,mBAEtBC,EAFsB,KAEZC,EAFY,KAGvBC,EAAQC,mBACV,iBAAO,CAACH,WAAUC,aAAU,CAACD,IAWjC,OAEI,cAACL,EAAYS,SAAb,CACIF,MAAOA,EADX,SAGKJ,EAAMO,YCJJC,EAhBK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC3B,OACI,gCACI,qBAAKC,UAAU,mBAAf,8BAGA,uBAEAA,UAAU,iBACNP,MAAOK,GAAU,GACjBG,SAAU,SAACC,GAAD,OAAOH,EAAUG,EAAEC,OAAOV,c,MCFpD,SAASW,EAAMf,GAAQ,IAEXG,EAAYa,qBAAWnB,GAAvBM,QAFU,EAIcF,mBAAS,IAJvB,mBAIXC,EAJW,KAIDe,EAJC,KAMZC,EAAUC,IAAMd,SAClB,iBAAM,CACF,CACIe,OAAQ,IACRC,SAAU,MAEd,CACID,OAAQ,OACRC,SAAU,QAEd,CACID,OAAQ,gBACRC,SAAU,SAGd,CACID,OAAQ,SACRC,SAAU,UAGd,CACID,OAAQ,SACRC,SAAU,SACVC,KAAM,SAACC,GAAD,MACW,UAAbA,EAAInB,MAEA,sBAAKO,UAAU,SAAf,UACI,mBAAGa,MAAM,uCACT,sBAAMb,UAAU,aAAhB,SAA8BY,EAAInB,WAG3B,sBAAKO,UAAU,SAAf,UACP,mBAAGa,MAAM,4BACT,+BAAOD,EAAInB,aAM3B,CACIgB,OAAQ,cACRC,SAAU,cAGd,CACID,OAAQ,cACRC,SAAU,iBAGlB,IAEJI,qBAAU,WACN,sBAAC,8BAAAC,EAAA,sEAC0BC,MAAM,yCADhC,cACSC,EADT,gBAE2BA,EAASC,OAFpC,OAESC,EAFT,OAGGC,QAAQC,IAAI,QAASF,EAAUG,MAC/BF,QAAQC,IAAI,oBAAqBF,EAAUG,MAC3ChB,EAAYa,EAAUG,MALzB,0CAAD,KAQD,IASH9B,EAAQD,GACR,IAAMgC,EAAgBC,mBAAS,CAC3BjB,UACAe,KAAM/B,GACPkC,kBAAiBC,iBAIhBC,EAcAJ,EAdAI,cACAC,EAaAL,EAbAK,kBACAC,EAYAN,EAZAM,aACAC,EAWAP,EAXAO,KACAC,EAUAR,EAVAQ,KACAC,EASAT,EATAS,SACAC,EAQAV,EARAU,YACAC,EAOAX,EAPAW,gBACAC,EAMAZ,EANAY,aACAC,EAKAb,EALAa,YACAC,EAIAd,EAJAc,YACAC,EAGAf,EAHAe,WACAC,EAEAhB,EAFAgB,MACAC,EACAjB,EADAiB,gBAKIC,EAAsCF,EAAtCE,aAAcC,EAAwBH,EAAxBG,UAAWC,EAAaJ,EAAbI,SACjC,OACI,gCACI,sBAAK3C,UAAU,2CAAf,UACI,cAAC,EAAD,CAAaA,UAAU,GAAGF,OAAQ2C,EAAc1C,UAAWyC,IAC3D,wCACUG,EADV,OACwBZ,EAAKa,OACzB,wBAAQnD,MAAOkD,EACX1C,SAAU,SAACC,GAAQmC,EAAYQ,OAAO3C,EAAEC,OAAOV,SADnD,SAEK,CAAC,EAAG,EAAG,GAAI,IAAIqD,KAAI,SAACH,GAAD,OAEhB,iCACKA,SAPjB,iBAeJ,qBAAK3C,UAAU,gCAAf,SACI,kDAAW2B,KAAX,IAA4B3B,UAAU,sCAAtC,UACI,gCAEQ6B,EAAaiB,KAAI,SAAAC,GAAW,OAExB,aADA,CACA,gCAAQA,EAAYC,uBAApB,aAEQD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAE1B,aADA,CACA,gCAAQA,EAAOC,kBAAf,aAEQD,EAAOE,OAAO,wBAO9C,iDAAWxB,KAAX,aAEQE,EAAKgB,KAAI,SAAAlC,GAGL,OADA0B,EAAW1B,GAEP,8CAAQA,EAAIyC,eAAZ,aAEQzC,EAAI0C,MAAMR,KAAI,SAAAS,GAEV,OACI,cAAC,IAAMC,SAAP,UAEI,8CAAQD,EAAKE,gBAAb,aACI,cAAC,IAAD,CAAMC,GAAI,UAAY9C,EAAI+C,SAASC,GAAI5D,UAAU,YAAjD,SAEQuD,EAAKH,OAAO,iCAcpE,sBAAKpD,UAAU,cAAf,UAEI,wBAAQA,UAAU,UAAU6D,QAAS,kBAAM1B,KAAgB2B,UAAW5B,EAAtE,SACI,mBAAGrB,MAAM,iCAEb,yCAEU,GACN,mCACK6B,EAAY,EADjB,OACwBN,EAAYQ,aAGxC,wBAAQ5C,UAAU,UAAU6D,QAAS,kBAAM7B,KAAY8B,UAAW7B,EAAlE,SACI,mBAAGpB,MAAM,wCC3L7B,IAqNekD,EArND,SAAC1E,GACX+B,QAAQC,IAAI,uBAAwB2C,eACpC,IAAMC,EAAUD,cACRzE,EAAac,qBAAWnB,GAAxBK,SAHa,EAKWD,mBAAS,IALpB,mBAKd4E,EALc,KAKJC,EALI,KAMbP,EAAOQ,cAAPR,GAEFrD,EAAUC,IAAMd,SAClB,iBAAM,CACF,CACIe,OAAQ,UACRC,SAAU,MAEd,CACID,OAAQ,aACRC,SAAU,SAGd,CACID,OAAQ,OACRC,SAAU,WAGlB,IAEJI,qBAAU,WACN,sBAAC,gCAAAC,EAAA,sEAC0BC,MAAM,yCADhC,cACSC,EADT,gBAE0BA,EAASC,OAFnC,OAESgD,EAFT,OAGG9C,QAAQC,IAAI,oBAAqB6C,EAAS5C,MAC1CF,QAAQC,IAAI,gCAAiC6C,EAAS5C,MAChD+C,EAAcH,EAAS5C,KAAKxB,QAAO,SAAAwE,GAGrC,GAAIA,EAAKC,WAAaX,EAClB,OAAOU,KAIfH,EAAYE,GACZjD,QAAQC,IAAI,iBAAkBgD,GAdjC,2CAAD,KAkBD,IAEH,IAYMG,EAZkB,SAACjF,GACrB,IAAIkF,EASJ,OAPAlF,EAASmF,SAAQ,SAAAC,GACTA,EAAQf,MAAQA,IAChBa,EAAOE,MAKRF,EAEUG,CAAgBrF,GACrC6B,QAAQC,IAAI,eAAgBmD,GAC5B,IAAMjD,EAAgBC,mBAAS,CAC3BjB,UACAe,KAAM4C,GACPzC,kBAAiBC,iBAIhBC,EAaAJ,EAbAI,cACAC,EAYAL,EAZAK,kBACAC,EAWAN,EAXAM,aACAC,EAUAP,EAVAO,KACAC,EASAR,EATAQ,KACAC,EAQAT,EARAS,SACAC,EAOAV,EAPAU,YACAC,EAMAX,EANAW,gBACAC,EAKAZ,EALAY,aACAC,EAIAb,EAJAa,YACAC,EAGAd,EAHAc,YACAC,EAEAf,EAFAe,WACAC,EACAhB,EADAgB,MAKIG,EAAwBH,EAAxBG,UAAWC,EAAaJ,EAAbI,SAEnB,OACI,gCAEI,yBAAQkB,QAAS,WACbI,EAAQY,UACT7E,UAAU,gCAFb,kBAEkD,mBAAGa,MAAM,uBAE3D,oBAAIb,UAAU,SACd,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,wCAAf,SAAuD,mBAAGa,MAAM,wBAChE,sBAAKb,UAAU,qBAAf,UACI,qBAAKA,UAAU,wBAAf,SAAwCwE,EAAaM,OACrD,qBAAK9E,UAAU,aAAf,SAA6BwE,EAAaO,QAC1C,qBAAK/E,UAAU,aAAf,SAA6BwE,EAAaQ,eAIlD,sBAAKhF,UAAU,gCAAf,UACI,sBAAKA,UAAU,oEAAf,UACI,oDACA,qBAAKA,UAAU,mBAAf,SAAmCkE,EAAStB,YAGhD,sBAAK5C,UAAU,oEAAf,UACI,2DACA,qBAAKA,UAAU,+BAAf,SAA+C2C,OAEnD,sBAAK3C,UAAU,oEAAf,UACI,qDACA,qBAAKA,UAAU,mCAAf,SAAmDwE,EAAaS,gBAEpE,sBAAKjF,UAAU,wDAAf,UACI,mDACA,qBAAKA,UAAU,mCAAf,SAAmDwE,EAAaU,mBAKxE,sBAAKlF,UAAU,2CAAf,UACI,qBAAKA,UAAU,mBAAf,mBACA,wCACU2C,EADV,OACwBZ,EAAKa,OACzB,wBAAQnD,MAAOkD,EACX1C,SAAU,SAACC,GAAQmC,EAAYQ,OAAO3C,EAAEC,OAAOV,SADnD,SAEK,CAAC,EAAG,EAAG,GAAI,IAAIqD,KAAI,SAACH,GAAD,OAEhB,iCACKA,SAPjB,iBAeJ,qBAAK3C,UAAU,gCAAf,SACI,kDAAW2B,KAAX,IAA4B3B,UAAU,sCAAtC,UACI,gCAEQ6B,EAAaiB,KAAI,SAAAC,GAAW,OAExB,aADA,CACA,gCAAQA,EAAYC,uBAApB,aAEQD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAE1B,aADA,CACA,gCAAQA,EAAOC,kBAAf,aAEQD,EAAOE,OAAO,wBAO9C,iDAAWxB,KAAX,aAEQE,EAAKgB,KAAI,SAAAlC,GAGL,OADA0B,EAAW1B,GAEP,8CAAQA,EAAIyC,eAAZ,aAEQzC,EAAI0C,MAAMR,KAAI,SAAAS,GAEV,OACI,cAAC,IAAMC,SAAP,UAEI,8CAAQD,EAAKE,gBAAb,aAEI,cAAC,IAAD,CAAMC,GAAI,aAAe9C,EAAI+C,SAASC,GAAI5D,UAAU,YAApD,SAEQuD,EAAKH,OAAO,iCAcpE,sBAAKpD,UAAU,cAAf,UAEI,wBAAQA,UAAU,UAAU6D,QAAS,kBAAM1B,KAAgB2B,UAAW5B,EAAtE,SACI,mBAAGrB,MAAM,iCAEb,yCAEU,GACN,mCACK6B,EAAY,EADjB,OACwBN,EAAYQ,aAGxC,wBAAQ5C,UAAU,UAAU6D,QAAS,kBAAM7B,KAAY8B,UAAW7B,EAAlE,SACI,mBAAGpB,MAAM,yCCpCdsE,EA3KE,WAEb,IAAMlB,EAAUD,cAFG,EAGmB1E,mBAAS,IAH5B,mBAGZ8F,EAHY,KAGCC,EAHD,KAIXzB,EAAOQ,cAAPR,GACFrD,EAAUC,IAAMd,SAClB,iBAAM,CACF,CACIe,OAAQ,IACRC,SAAU,WAEd,CACID,OAAQ,OACRC,SAAU,QAGd,CACID,OAAQ,gBACRC,SAAU,SAEd,CACID,OAAQ,OACRC,SAAU,QAEd,CACID,OAAQ,aACRC,SAAU,cAEd,CACID,OAAQ,aACRC,SAAU,iBAGlB,IAEJI,qBAAU,WACN,sBAAC,gCAAAC,EAAA,sEAC0BC,MAAM,4CADhC,cACSC,EADT,gBAE6BA,EAASC,OAFtC,OAESkE,EAFT,OAGGhE,QAAQC,IAAI,QAAS+D,EAAY9D,MACjCF,QAAQC,IAAI,oBAAqB+D,EAAY9D,MACvCgE,EAAkBF,EAAY9D,KAAKxB,QAAO,SAAAyF,GAC5C,GAAIA,EAAQC,WAAa5B,EACrB,OAAO2B,KAGfF,EAAeC,GACflE,QAAQC,IAAI,kBAAoBiE,GAXnC,2CAAD,KAaD,IAIH,IAAM/D,EAAgBC,mBAAS,CAC3BjB,UACAe,KAAM8D,GACP3D,kBAAiBC,iBAIhBC,EAaAJ,EAbAI,cACAC,EAYAL,EAZAK,kBACAC,EAWAN,EAXAM,aACAC,EAUAP,EAVAO,KACAC,EASAR,EATAQ,KACAC,EAQAT,EARAS,SACAC,EAOAV,EAPAU,YACAC,EAMAX,EANAW,gBACAC,EAKAZ,EALAY,aACAC,EAIAb,EAJAa,YACAC,EAGAd,EAHAc,YACAC,EAEAf,EAFAe,WACAC,EACAhB,EADAgB,MAKIG,EAAwBH,EAAxBG,UAAWC,EAAaJ,EAAbI,SACnB,OACI,gCACG,yBAAQkB,QAAS,WACRI,EAAQY,UACT7E,UAAU,gCAFlB,kBAEuD,mBAAGa,MAAM,uBAC/D,oBAAIb,UAAU,SACd,sBAAKA,UAAU,2CAAf,UACI,qBAAKA,UAAU,mBAAf,sBACA,wCACU2C,EADV,OACwBZ,EAAKa,OACzB,wBAAQnD,MAAOkD,EACX1C,SAAU,SAACC,GAAQmC,EAAYQ,OAAO3C,EAAEC,OAAOV,SADnD,SAEK,CAAC,EAAG,EAAG,GAAI,IAAIqD,KAAI,SAACH,GAAD,OAEhB,iCACKA,SAPjB,iBAeJ,qBAAK3C,UAAU,gCAAf,SACI,kDAAW2B,KAAX,IAA4B3B,UAAU,sCAAtC,UACI,gCAEQ6B,EAAaiB,KAAI,SAAAC,GAAW,OAExB,aADA,CACA,gCAAQA,EAAYC,uBAApB,aAEQD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAE1B,aADA,CACA,gCAAQA,EAAOC,kBAAf,aAEQD,EAAOE,OAAO,wBAO9C,iDAAWxB,KAAX,aAEQE,EAAKgB,KAAI,SAAAlC,GAGL,OADA0B,EAAW1B,GAEP,8CAAQA,EAAIyC,eAAZ,aAEQzC,EAAI0C,MAAMR,KAAI,SAAAS,GAEV,OACI,cAAC,IAAMC,SAAP,UAEI,8CAAQD,EAAKE,gBAAb,aAGQF,EAAKH,OAAO,+BAchE,sBAAKpD,UAAU,cAAf,UAEI,wBAAQA,UAAU,UAAU6D,QAAS,kBAAM1B,KAAgB2B,UAAW5B,EAAtE,SACI,mBAAGrB,MAAM,iCAEb,yCAEU,GACN,mCACK6B,EAAY,EADjB,OACwBN,EAAYQ,aAGxC,wBAAQ5C,UAAU,UAAU6D,QAAS,kBAAM7B,KAAY8B,UAAW7B,EAAlE,SACI,mBAAGpB,MAAM,yC,MC3Hd4E,MAnCf,WACE,OACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAeC,SAAS,iBAAxB,UACE,sBAAK1F,UAAU,MAAf,UACE,qBAAKA,UAAU,uBAAf,oBACA,qBAAKA,UAAU,qCAAf,SAEE,sBAAKA,UAAU,aAAf,UACE,mBAAGa,MAAM,8CACT,sBAAKb,UAAU,GAAf,UACE,sBAAMA,UAAU,6BAAhB,sBAA4D,uBAC5D,sBAAMA,UAAU,mBAAhB,6BAMR,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO2F,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,EAAD,eCxBGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASlD,OACP,cAAC,IAAMmD,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.faf24e5b.chunk.js","sourcesContent":["import React , {useEffect , useState, useMemo , createContext} from 'react';\r\nconst UserContext = createContext();\r\nconst HelperContext = (props) => {\r\n  \r\n    const [userData, setData] = useState([]);\r\n    const value = useMemo(\r\n        () => ({userData, setData}),[userData])\r\n    // useEffect(() => {\r\n    //     (async () => {\r\n    //         const response = await fetch(\"https://gorest.co.in/public-api/users\");\r\n    //         const usersData = await response.json();\r\n    //         console.log(\"users\", usersData.data);\r\n    //         console.log(\"users from state \", usersData.data)\r\n    //         setUserData(usersData.data);\r\n    //         // const user_data = React.useContext(UserContext);\r\n    //     })();\r\n    // }, []);\r\n    return (\r\n\r\n        <UserContext.Provider\r\n            value={value}\r\n        >\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nexport  {HelperContext , UserContext};","import React from 'react';\r\n\r\nconst Filteration = ({ filter, setFilter }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"font-weight-bold\">\r\n                Users Dictionary\r\n            </div>\r\n            <input\r\n            //class=\"fas\" placeholder=\"&#xf002;\"\r\n            className=\"border rounded\"\r\n                value={filter || ''}\r\n                onChange={(e) => setFilter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filteration;","import React, { useState, useEffect, createContext, useContext } from 'react';\r\nimport { useTable, useGlobalFilter, usePagination } from 'react-table'\r\nimport { UserContext } from './HelperContext'\r\nimport { Link } from \"react-router-dom\";\r\nimport Filteration from './Filteration'\r\nimport './Users.css'\r\n//import UserContext from './HelperContext'\r\n\r\n//const UserContext = createContext();\r\n\r\nfunction Users(props) {\r\n\r\n    const { setData } = useContext(UserContext);\r\n\r\n    const [userData, setUserData] = useState([]);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: '#',\r\n                accessor: 'id',\r\n            },\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'name',\r\n            },\r\n            {\r\n                Header: 'Email address',\r\n                accessor: 'email',\r\n            },\r\n\r\n            {\r\n                Header: 'Gender',\r\n                accessor: 'gender',\r\n            },\r\n\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'status',\r\n                Cell: (row) =>\r\n                    row.value == 'Active' ? (\r\n\r\n                        <div className=\"d-flex\">\r\n                            <i class=\"fas fa-circle mt-1 mx-1 activeIcon\"></i>\r\n                            <span className=\"activeIcon\">{row.value}</span>\r\n\r\n\r\n                        </div>) : (<div className=\"d-flex\">\r\n                            <i class=\"fas fa-circle mt-1 mx-1\"></i>\r\n                            <span>{row.value}</span>\r\n\r\n\r\n                        </div>)\r\n            },\r\n\r\n            {\r\n                Header: 'Create Date',\r\n                accessor: 'created_at',\r\n            },\r\n\r\n            {\r\n                Header: 'Update Date',\r\n                accessor: 'updated_at',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetch(\"https://gorest.co.in/public-api/users\");\r\n            const usersData = await response.json();\r\n            console.log(\"users\", usersData.data);\r\n            console.log(\"users from state \", usersData.data)\r\n            setUserData(usersData.data);\r\n            // const user_data = React.useContext(UserContext);\r\n        })();\r\n    }, []);\r\n\r\n    // const getUsers = async () =>{\r\n    //     const response = await fetch (\"https://gorest.co.in/public-api/users\");\r\n    //     const usersData = await response.json();\r\n    //     console.log(\"users\" , usersData)\r\n    //     return usersData\r\n    // }\r\n\r\n    setData(userData)\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data: userData\r\n    }, useGlobalFilter, usePagination)\r\n\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        rows,\r\n        nextPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        previousPage,\r\n        pageOptions,\r\n        setPageSize,\r\n        prepareRow,\r\n        state,\r\n        setGlobalFilter\r\n    } = tableInstance\r\n\r\n\r\n\r\n    const { globalFilter, pageIndex, pageSize } = state\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between px-5 mt-4\">\r\n                <Filteration className=\"\" filter={globalFilter} setFilter={setGlobalFilter} />\r\n                <div>\r\n                    show {pageSize} of {rows.length}\r\n                    <select value={pageSize}\r\n                        onChange={(e) => { setPageSize(Number(e.target.value)) }} >\r\n                        {[3, 5, 10, 20].map((pageSize) => (\r\n\r\n                            <option>\r\n                                {pageSize}\r\n                            </option>\r\n                        ))}\r\n\r\n                    </select>\r\n                per page\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <table {...getTableProps()} className=\"container m-3 text-center shadow-lg\">\r\n                    <thead>\r\n                        {// Loop over the header rows\r\n                            headerGroups.map(headerGroup => (\r\n                                // Apply the header row props\r\n                                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                    {// Loop over the headers in each row\r\n                                        headerGroup.headers.map(column => (\r\n                                            // Apply the header cell props\r\n                                            <th {...column.getHeaderProps()}>\r\n                                                {// Render the header\r\n                                                    column.render('Header')}\r\n                                            </th>\r\n                                        ))}\r\n                                </tr>\r\n                            ))}\r\n                    </thead>\r\n\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {\r\n                            page.map(row => {\r\n\r\n                                prepareRow(row)\r\n                                return (\r\n                                    <tr {...row.getRowProps()}>\r\n                                        {\r\n                                            row.cells.map(cell => {\r\n\r\n                                                return (\r\n                                                    <React.Fragment>\r\n\r\n                                                        <td {...cell.getCellProps()}>\r\n                                                            <Link to={'/posts/' + row.original.id} className=\"postsLink\">\r\n                                                                {\r\n                                                                    cell.render('Cell')}\r\n\r\n                                                            </Link>\r\n                                                        </td>\r\n\r\n                                                    </React.Fragment>\r\n                                                )\r\n                                            })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"text-center\">\r\n\r\n                <button className=\"rounded\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-left\"></i>\r\n                </button>\r\n                <span>\r\n\r\n                    page {''}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>\r\n                </span>\r\n                <button className=\"rounded\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-right\"></i>\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport { Users };","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useTable, useGlobalFilter, usePagination } from 'react-table'\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { UserContext } from './HelperContext'\r\n\r\n\r\nconst Posts = (props) => {\r\n    console.log(\"useHistory from post\", useHistory())\r\n    const history = useHistory()\r\n    const { userData } = useContext(UserContext);\r\n    //console.log(\"cccccccccccccc\",userData)\r\n    const [postData, setPostData] = useState([]);\r\n    const { id } = useParams()\r\n    //history.push(\"/posts/\" + id)\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Post ID',\r\n                accessor: 'id',\r\n            },\r\n            {\r\n                Header: 'Post Title',\r\n                accessor: 'title',\r\n            },\r\n\r\n            {\r\n                Header: 'Body',\r\n                accessor: 'body',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetch(\"https://gorest.co.in/public-api/posts\");\r\n            const postData = await response.json();\r\n            console.log(\"dataaaaaaaaaaaaaa\", postData.data);\r\n            console.log(\"dataaaaaaaaaaaaaa from state \", postData.data)\r\n            const filterdData = postData.data.filter(post => {\r\n                // console.log('post =>', post.user_id)\r\n                // console.log('id =>', id)\r\n                if (post.user_id === +id) {\r\n                    return post\r\n                }\r\n            })\r\n\r\n            setPostData(filterdData);\r\n            console.log(\"ssssssssssssss\", filterdData)\r\n\r\n\r\n        })();\r\n    }, []);\r\n\r\n    const displayUserData = (userData) => {\r\n        let user;\r\n        // console.log(\"propsssssssssssssssssssssssssssss\")\r\n        userData.forEach(userObj => {\r\n            if (userObj.id === +id) {\r\n                user = userObj\r\n\r\n            }\r\n\r\n        });\r\n        return user\r\n    }\r\n    const renderedUser = displayUserData(userData)\r\n    console.log(\"renderedUser\", renderedUser)\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data: postData\r\n    }, useGlobalFilter, usePagination)\r\n\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        rows,\r\n        nextPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        previousPage,\r\n        pageOptions,\r\n        setPageSize,\r\n        prepareRow,\r\n        state,\r\n    } = tableInstance\r\n\r\n\r\n\r\n    const { pageIndex, pageSize } = state\r\n\r\n    return (\r\n        <div>\r\n\r\n            <button onClick={() => {\r\n                history.goBack()\r\n            }} className=\"mx-5 mt-4 btn border bg-light\">back <i class=\"fas fa-undo-alt\"></i></button>\r\n\r\n            <hr className=\"mx-5\" />\r\n            <div className=\"d-flex mx-5 mt-4\">\r\n                <div className=\"Avatar bg-light text-center pt-4 mx-3\"><i class=\"far fa-user fa-3x\"></i></div>\r\n                <div className=\"d-flex flex-column\">\r\n                    <div className=\"mt-4 font-weight-bold\">{renderedUser.name}</div>\r\n                    <div className=\"text-muted\">{renderedUser.email}</div>\r\n                    <div className=\"activeIcon\">{renderedUser.status}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex border-bottom mx-5 p-4\">\r\n                <div className=\"cube border-right px-4 d-flex flex-column justify-content-between\">\r\n                    <div>TOTAL NO OF POSTS</div>\r\n                    <div className=\"font-weight-bold\">{postData.length}</div>\r\n                </div>\r\n\r\n                <div className=\"cube border-right px-4 d-flex flex-column justify-content-between\" >\r\n                    <div>CURRENT PAGE NO OF POSTS</div>\r\n                    <div className=\"font-weight-bold text-danger\">{pageSize}</div>\r\n                </div>\r\n                <div className=\"cube border-right px-4 d-flex flex-column justify-content-between\">\r\n                    <div>USER CREATION DATE</div>\r\n                    <div className=\"font-weight-bold overflow-hidden\">{renderedUser.created_at}</div>\r\n                </div>\r\n                <div className=\"cube  px-4 d-flex flex-column justify-content-between\">\r\n                    <div>USER UPDATE DATE</div>\r\n                    <div className=\"font-weight-bold overflow-hidden\">{renderedUser.updated_at}</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-between px-5 mt-4\">\r\n                <div className=\"font-weight-bold\">Posts</div>\r\n                <div>\r\n                    show {pageSize} of {rows.length}\r\n                    <select value={pageSize}\r\n                        onChange={(e) => { setPageSize(Number(e.target.value)) }} >\r\n                        {[3, 5, 10, 20].map((pageSize) => (\r\n\r\n                            <option>\r\n                                {pageSize}\r\n                            </option>\r\n                        ))}\r\n\r\n                    </select>\r\n                per page\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <table {...getTableProps()} className=\"container m-3 text-center shadow-lg\">\r\n                    <thead>\r\n                        {// Loop over the header rows\r\n                            headerGroups.map(headerGroup => (\r\n                                // Apply the header row props\r\n                                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                    {// Loop over the headers in each row\r\n                                        headerGroup.headers.map(column => (\r\n                                            // Apply the header cell props\r\n                                            <th {...column.getHeaderProps()}>\r\n                                                {// Render the header\r\n                                                    column.render('Header')}\r\n                                            </th>\r\n                                        ))}\r\n                                </tr>\r\n                            ))}\r\n                    </thead>\r\n\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {\r\n                            page.map(row => {\r\n\r\n                                prepareRow(row)\r\n                                return (\r\n                                    <tr {...row.getRowProps()}>\r\n                                        {\r\n                                            row.cells.map(cell => {\r\n\r\n                                                return (\r\n                                                    <React.Fragment>\r\n\r\n                                                        <td {...cell.getCellProps()}>\r\n\r\n                                                            <Link to={'/comments/' + row.original.id} className=\"postsLink\">\r\n                                                                {\r\n                                                                    cell.render('Cell')}\r\n\r\n                                                            </Link>\r\n                                                        </td>\r\n\r\n                                                    </React.Fragment>\r\n                                                )\r\n                                            })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"text-center\">\r\n\r\n                <button className=\"rounded\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-left\"></i>\r\n                </button>\r\n                <span>\r\n\r\n                    page {''}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>\r\n                </span>\r\n                <button className=\"rounded\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-right\"></i>\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React, { useState, useEffect  } from 'react';\r\nimport { useTable, useGlobalFilter, usePagination } from 'react-table';\r\nimport { Link , useParams , useHistory } from \"react-router-dom\";\r\n\r\nconst Comments = () => {\r\n    //console.log(\"useHistory \" , useHistory() )\r\n    const history = useHistory()\r\n    const [commentData, setCommentData] = useState([]);\r\n    const { id } = useParams()\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: '#',\r\n                accessor: 'post_id',\r\n            },\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'name',\r\n            },\r\n\r\n            {\r\n                Header: 'Email address',\r\n                accessor: 'email',\r\n            },\r\n            {\r\n                Header: 'Body',\r\n                accessor: 'body',\r\n            },\r\n            {\r\n                Header: 'Created At',\r\n                accessor: 'created_at',\r\n            },\r\n            {\r\n                Header: 'Updated At',\r\n                accessor: 'updated_at',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetch(\"https://gorest.co.in/public-api/comments\");\r\n            const commentData = await response.json();\r\n            console.log(\"users\", commentData.data);\r\n            console.log(\"users from state \", commentData.data)\r\n            const filterdComments = commentData.data.filter(comment => {\r\n                if (comment.post_id === +id) {\r\n                    return comment\r\n                }\r\n            })\r\n            setCommentData(filterdComments);\r\n            console.log(\"filterdComments\" , filterdComments)\r\n        })();\r\n    }, []);\r\n\r\n\r\n\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data: commentData\r\n    }, useGlobalFilter, usePagination)\r\n\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        rows,\r\n        nextPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        previousPage,\r\n        pageOptions,\r\n        setPageSize,\r\n        prepareRow,\r\n        state,\r\n    } = tableInstance\r\n\r\n\r\n\r\n    const { pageIndex, pageSize } = state\r\n    return (\r\n        <div>\r\n           <button onClick={()=>{\r\n                    history.goBack()\r\n                }} className=\"mx-5 mt-4 btn border bg-light\">back <i class=\"fas fa-undo-alt\"></i></button>\r\n            <hr className=\"mx-5\" />\r\n            <div className=\"d-flex justify-content-between px-5 mt-4\">\r\n                <div className=\"font-weight-bold\">Comments</div>\r\n                <div>\r\n                    show {pageSize} of {rows.length}\r\n                    <select value={pageSize}\r\n                        onChange={(e) => { setPageSize(Number(e.target.value)) }} >\r\n                        {[3, 5, 10, 20].map((pageSize) => (\r\n\r\n                            <option>\r\n                                {pageSize}\r\n                            </option>\r\n                        ))}\r\n\r\n                    </select>\r\n                per page\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <table {...getTableProps()} className=\"container m-3 text-center shadow-lg\">\r\n                    <thead>\r\n                        {// Loop over the header rows\r\n                            headerGroups.map(headerGroup => (\r\n                                // Apply the header row props\r\n                                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                    {// Loop over the headers in each row\r\n                                        headerGroup.headers.map(column => (\r\n                                            // Apply the header cell props\r\n                                            <th {...column.getHeaderProps()}>\r\n                                                {// Render the header\r\n                                                    column.render('Header')}\r\n                                            </th>\r\n                                        ))}\r\n                                </tr>\r\n                            ))}\r\n                    </thead>\r\n\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {\r\n                            page.map(row => {\r\n\r\n                                prepareRow(row)\r\n                                return (\r\n                                    <tr {...row.getRowProps()}>\r\n                                        {\r\n                                            row.cells.map(cell => {\r\n\r\n                                                return (\r\n                                                    <React.Fragment>\r\n\r\n                                                        <td {...cell.getCellProps()}>\r\n\r\n                                                            {\r\n                                                                cell.render('Cell')}\r\n\r\n\r\n                                                        </td>\r\n\r\n                                                    </React.Fragment>\r\n                                                )\r\n                                            })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"text-center\">\r\n\r\n                <button className=\"rounded\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-left\"></i>\r\n                </button>\r\n                <span>\r\n\r\n                    page {''}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>\r\n                </span>\r\n                <button className=\"rounded\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-right\"></i>\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Users } from './components/Users'\nimport { HelperContext, UserContext } from './components/HelperContext'\nimport Posts from './components/Posts'\nimport Comments from './components/Comments'\n//import UserContext from './components/HelperContext'\nimport './App.css';\n\nfunction App() {\n  return (\n    <HelperContext>\n      <BrowserRouter basename=\"/solve_IT_Book\">\n        <div className=\"App\">\n          <div className=\"w-100 bg-dark header\">header</div>\n          <div className=\"w-100 bg-light text-left p-1 logo \">\n\n            <div className=\"d-flex m-2\">\n              <i class=\"fas fa-swatchbook fa-3x align-self-center\"></i>\n              <div className=\"\">\n                <span className=\"font-weight-bold greenText\">Solve IT</span><br />\n                <span className=\"font-weight-bold\">Book</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Switch>\n\n          <Route exact path=\"/\">\n            <Users />\n          </Route>\n          <Route path=\"/posts/:id\">\n            <Posts />\n          </Route>\n          <Route path=\"/comments/:id\">\n            <Comments />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </HelperContext>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}