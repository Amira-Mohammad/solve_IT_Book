{"version":3,"sources":["components/Filteration.js","components/Users.js","components/Posts.js","components/Comments.js","App.js","reportWebVitals.js","index.js"],"names":["Filteration","filter","setFilter","className","value","onChange","e","target","Users","props","useState","userData","setUserData","columns","React","useMemo","Header","accessor","Cell","row","class","useEffect","a","fetch","response","json","usersData","console","log","data","tableInstance","useTable","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","page","rows","nextPage","canNextPage","canPreviousPage","previousPage","pageOptions","setPageSize","prepareRow","state","setGlobalFilter","globalFilter","pageIndex","pageSize","length","Number","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","Fragment","getCellProps","to","id","onClick","disabled","Posts","postData","setPostData","Comments","commentData","setCommentData","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37f789dc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filteration = ({ filter, setFilter }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"font-weight-bold\">\r\n                Users Dictionary\r\n            </div>\r\n            <input\r\n            //class=\"fas\" placeholder=\"&#xf002;\"\r\n            className=\"border rounded\"\r\n                value={filter || ''}\r\n                onChange={(e) => setFilter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filteration;","import React, { useState, useEffect } from 'react';\r\nimport { useTable, useGlobalFilter, usePagination } from 'react-table'\r\nimport { Link } from \"react-router-dom\";\r\nimport Filteration from './Filteration'\r\nimport './Users.css'\r\n\r\nfunction Users(props) {\r\n    const [userData, setUserData] = useState([]);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: '#',\r\n                accessor: 'id',\r\n            },\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'name',\r\n            },\r\n            {\r\n                Header: 'Email address',\r\n                accessor: 'email',\r\n            },\r\n\r\n            {\r\n                Header: 'Gender',\r\n                accessor: 'gender',\r\n            },\r\n\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'status',\r\n                Cell: (row) =>\r\n                row.value == 'Active' ?   (\r\n                    \r\n                <div className=\"d-flex\">\r\n                    <i class=\"fas fa-circle mt-1 mx-1 activeIcon\"></i>\r\n                    <span className=\"activeIcon\">{row.value}</span>\r\n                    \r\n                    \r\n                    </div>) :( <div className=\"d-flex\">\r\n                    <i class=\"fas fa-circle mt-1 mx-1\"></i>\r\n                    <span>{row.value}</span>\r\n                    \r\n                    \r\n                    </div>)\r\n            },\r\n\r\n            {\r\n                Header: 'Create Date',\r\n                accessor: 'created_at',\r\n            },\r\n\r\n            {\r\n                Header: 'Update Date',\r\n                accessor: 'updated_at',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetch(\"https://gorest.co.in/public-api/users\");\r\n            const usersData = await response.json();\r\n            console.log(\"users\", usersData.data);\r\n            console.log(\"users from state \", usersData.data)\r\n            setUserData(usersData.data);\r\n        })();\r\n    }, []);\r\n\r\n    // const getUsers = async () =>{\r\n    //     const response = await fetch (\"https://gorest.co.in/public-api/users\");\r\n    //     const usersData = await response.json();\r\n    //     console.log(\"users\" , usersData)\r\n    //     return usersData\r\n    // }\r\n\r\n\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data: userData\r\n    }, useGlobalFilter, usePagination)\r\n\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        rows,\r\n        nextPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        previousPage,\r\n        pageOptions,\r\n        setPageSize,\r\n        prepareRow,\r\n        state,\r\n        setGlobalFilter\r\n    } = tableInstance\r\n\r\n\r\n\r\n    const { globalFilter, pageIndex, pageSize } = state\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between px-5 mt-4\">\r\n                <Filteration className=\"\" filter={globalFilter} setFilter={setGlobalFilter} />\r\n                <div>\r\n                    show {pageSize} of {rows.length}\r\n                    <select value={pageSize}\r\n                        onChange={(e) => { setPageSize(Number(e.target.value)) }} >\r\n                        {[3, 5, 10, 20].map((pageSize) => (\r\n\r\n                            <option>\r\n                                {pageSize}\r\n                            </option>\r\n                        ))}\r\n\r\n                    </select>\r\n                per page\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <table {...getTableProps()} className=\"container m-3 text-center shadow-lg\">\r\n                    <thead>\r\n                        {// Loop over the header rows\r\n                            headerGroups.map(headerGroup => (\r\n                                // Apply the header row props\r\n                                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                    {// Loop over the headers in each row\r\n                                        headerGroup.headers.map(column => (\r\n                                            // Apply the header cell props\r\n                                            <th {...column.getHeaderProps()}>\r\n                                                {// Render the header\r\n                                                    column.render('Header')}\r\n                                            </th>\r\n                                        ))}\r\n                                </tr>\r\n                            ))}\r\n                    </thead>\r\n\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {\r\n                            page.map(row => {\r\n\r\n                                prepareRow(row)\r\n                                return (\r\n                                    <tr {...row.getRowProps()}>\r\n                                        {\r\n                                            row.cells.map(cell => {\r\n\r\n                                                return (\r\n                                                    <React.Fragment>\r\n\r\n                                                        <td {...cell.getCellProps()}>\r\n                                                            <Link to={'/posts' + row.id} className=\"postsLink\">\r\n                                                                {\r\n                                                                    cell.render('Cell')}\r\n\r\n                                                            </Link>\r\n                                                        </td>\r\n\r\n                                                    </React.Fragment>\r\n                                                )\r\n                                            })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"text-center\">\r\n\r\n                <button className=\"rounded\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-left\"></i>\r\n                </button>\r\n                <span>\r\n\r\n                    page {''}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>\r\n                </span>\r\n                <button className=\"rounded\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-right\"></i>\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import React, { useState, useEffect } from 'react';\r\nimport { useTable, useGlobalFilter, usePagination } from 'react-table'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Posts = (props) => {\r\n    console.log(props)\r\n    const [postData, setPostData] = useState([]);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Post ID',\r\n                accessor: 'id',\r\n            },\r\n            {\r\n                Header: 'Post Title',\r\n                accessor: 'title',\r\n            },\r\n\r\n            {\r\n                Header: 'Body',\r\n                accessor: 'body',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetch(\"https://gorest.co.in/public-api/posts\");\r\n            const postData = await response.json();\r\n            console.log(\"users\", postData.data);\r\n            console.log(\"users from state \", postData.data)\r\n            setPostData(postData.data);\r\n        })();\r\n    }, []);\r\n\r\n\r\n\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data: postData\r\n    }, useGlobalFilter, usePagination)\r\n\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        rows,\r\n        nextPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        previousPage,\r\n        pageOptions,\r\n        setPageSize,\r\n        prepareRow,\r\n        state,\r\n    } = tableInstance\r\n\r\n\r\n\r\n    const { pageIndex, pageSize } = state\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className=\"postsLink\">\r\n                <button className=\"mx-5 mt-4 btn border bg-light\">back <i class=\"fas fa-undo-alt\"></i></button>\r\n            </Link>\r\n            <hr className=\"mx-5\" />\r\n            <div className=\"d-flex justify-content-between px-5 mt-4\">\r\n                <div className=\"font-weight-bold\">Posts</div>\r\n                <div>\r\n                    show {pageSize} of {rows.length}\r\n                    <select value={pageSize}\r\n                        onChange={(e) => { setPageSize(Number(e.target.value)) }} >\r\n                        {[3, 5, 10, 20].map((pageSize) => (\r\n\r\n                            <option>\r\n                                {pageSize}\r\n                            </option>\r\n                        ))}\r\n\r\n                    </select>\r\n                per page\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <table {...getTableProps()} className=\"container m-3 text-center shadow-lg\">\r\n                    <thead>\r\n                        {// Loop over the header rows\r\n                            headerGroups.map(headerGroup => (\r\n                                // Apply the header row props\r\n                                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                    {// Loop over the headers in each row\r\n                                        headerGroup.headers.map(column => (\r\n                                            // Apply the header cell props\r\n                                            <th {...column.getHeaderProps()}>\r\n                                                {// Render the header\r\n                                                    column.render('Header')}\r\n                                            </th>\r\n                                        ))}\r\n                                </tr>\r\n                            ))}\r\n                    </thead>\r\n\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {\r\n                            page.map(row => {\r\n\r\n                                prepareRow(row)\r\n                                return (\r\n                                    <tr {...row.getRowProps()}>\r\n                                        {\r\n                                            row.cells.map(cell => {\r\n\r\n                                                return (\r\n                                                    <React.Fragment>\r\n\r\n                                                        <td {...cell.getCellProps()}>\r\n                                                            <Link to='/comments' className=\"postsLink\">\r\n                                                                {\r\n                                                                    cell.render('Cell')}\r\n\r\n                                                            </Link>\r\n                                                        </td>\r\n\r\n                                                    </React.Fragment>\r\n                                                )\r\n                                            })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"text-center\">\r\n\r\n                <button className=\"rounded\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-left\"></i>\r\n                </button>\r\n                <span>\r\n\r\n                    page {''}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>\r\n                </span>\r\n                <button className=\"rounded\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-right\"></i>\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React, { useState, useEffect } from 'react';\r\nimport { useTable, useGlobalFilter, usePagination } from 'react-table';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Comments = () => {\r\n    const [commentData, setCommentData] = useState([]);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: '#',\r\n                accessor: 'post_id',\r\n            },\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'name',\r\n            },\r\n\r\n            {\r\n                Header: 'Email address',\r\n                accessor: 'email',\r\n            },\r\n            {\r\n                Header: 'Body',\r\n                accessor: 'body',\r\n            },\r\n            {\r\n                Header: 'Created At',\r\n                accessor: 'created_at',\r\n            },\r\n            {\r\n                Header: 'Updated At',\r\n                accessor: 'updated_at',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetch(\"https://gorest.co.in/public-api/comments\");\r\n            const commentData = await response.json();\r\n            console.log(\"users\", commentData.data);\r\n            console.log(\"users from state \", commentData.data)\r\n            setCommentData(commentData.data);\r\n        })();\r\n    }, []);\r\n\r\n\r\n\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data: commentData\r\n    }, useGlobalFilter, usePagination)\r\n\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        rows,\r\n        nextPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        previousPage,\r\n        pageOptions,\r\n        setPageSize,\r\n        prepareRow,\r\n        state,\r\n    } = tableInstance\r\n\r\n\r\n\r\n    const { pageIndex, pageSize } = state\r\n    return (\r\n        <div>\r\n            <Link to='/posts:id' className=\"postsLink\">\r\n                <button className=\"mx-5 mt-4 btn border bg-light\">back <i class=\"fas fa-undo-alt\"></i></button>\r\n            </Link>\r\n            <hr className=\"mx-5\" />\r\n            <div className=\"d-flex justify-content-between px-5 mt-4\">\r\n                <div className=\"font-weight-bold\">Comments</div>\r\n                <div>\r\n                    show {pageSize} of {rows.length}\r\n                    <select value={pageSize}\r\n                        onChange={(e) => { setPageSize(Number(e.target.value)) }} >\r\n                        {[3, 5, 10, 20].map((pageSize) => (\r\n\r\n                            <option>\r\n                                {pageSize}\r\n                            </option>\r\n                        ))}\r\n\r\n                    </select>\r\n                per page\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <table {...getTableProps()} className=\"container m-3 text-center shadow-lg\">\r\n                    <thead>\r\n                        {// Loop over the header rows\r\n                            headerGroups.map(headerGroup => (\r\n                                // Apply the header row props\r\n                                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                    {// Loop over the headers in each row\r\n                                        headerGroup.headers.map(column => (\r\n                                            // Apply the header cell props\r\n                                            <th {...column.getHeaderProps()}>\r\n                                                {// Render the header\r\n                                                    column.render('Header')}\r\n                                            </th>\r\n                                        ))}\r\n                                </tr>\r\n                            ))}\r\n                    </thead>\r\n\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {\r\n                            page.map(row => {\r\n\r\n                                prepareRow(row)\r\n                                return (\r\n                                    <tr {...row.getRowProps()}>\r\n                                        {\r\n                                            row.cells.map(cell => {\r\n\r\n                                                return (\r\n                                                    <React.Fragment>\r\n\r\n                                                        <td {...cell.getCellProps()}>\r\n\r\n                                                            {\r\n                                                                cell.render('Cell')}\r\n\r\n\r\n                                                        </td>\r\n\r\n                                                    </React.Fragment>\r\n                                                )\r\n                                            })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"text-center\">\r\n\r\n                <button className=\"rounded\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-left\"></i>\r\n                </button>\r\n                <span>\r\n\r\n                    page {''}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>\r\n                </span>\r\n                <button className=\"rounded\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    <i class=\"fas fa-long-arrow-alt-right\"></i>\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Users from './components/Users'\nimport Posts from './components/Posts'\nimport Comments from './components/Comments'\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/solve_IT_Book\">\n      <div className=\"App\">\n        <div className=\"w-100 bg-dark header\">header</div>\n        <div className=\"w-100 bg-light text-left p-1 logo \">\n\n          <div className=\"d-flex m-2\">\n            <i class=\"fas fa-swatchbook fa-3x align-self-center\"></i>\n            <div className=\"\">\n              <span className=\"font-weight-bold greenText\">Solve IT</span><br />\n              <span className=\"font-weight-bold\">Book</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Switch>\n\n        <Route exact path=\"/\">\n          <Users />\n        </Route>\n        <Route path=\"/posts:id\">\n          <Posts />\n        </Route>\n        <Route path=\"/comments\">\n          <Comments />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}